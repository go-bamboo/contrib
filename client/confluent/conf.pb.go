// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: client/confluent/conf.proto

package confluent

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SASL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mechanisms string `protobuf:"bytes,1,opt,name=mechanisms,proto3" json:"mechanisms,omitempty"`
	User       string `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	Password   string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *SASL) Reset() {
	*x = SASL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_confluent_conf_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SASL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SASL) ProtoMessage() {}

func (x *SASL) ProtoReflect() protoreflect.Message {
	mi := &file_client_confluent_conf_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SASL.ProtoReflect.Descriptor instead.
func (*SASL) Descriptor() ([]byte, []int) {
	return file_client_confluent_conf_proto_rawDescGZIP(), []int{0}
}

func (x *SASL) GetMechanisms() string {
	if x != nil {
		return x.Mechanisms
	}
	return ""
}

func (x *SASL) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *SASL) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type SSL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CaLocation string `protobuf:"bytes,1,opt,name=caLocation,proto3" json:"caLocation,omitempty"`
	CaPem      string `protobuf:"bytes,2,opt,name=caPem,proto3" json:"caPem,omitempty"`
}

func (x *SSL) Reset() {
	*x = SSL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_confluent_conf_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSL) ProtoMessage() {}

func (x *SSL) ProtoReflect() protoreflect.Message {
	mi := &file_client_confluent_conf_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSL.ProtoReflect.Descriptor instead.
func (*SSL) Descriptor() ([]byte, []int) {
	return file_client_confluent_conf_proto_rawDescGZIP(), []int{1}
}

func (x *SSL) GetCaLocation() string {
	if x != nil {
		return x.CaLocation
	}
	return ""
}

func (x *SSL) GetCaPem() string {
	if x != nil {
		return x.CaPem
	}
	return ""
}

type ConsumerConf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BootstrapServers string   `protobuf:"bytes,1,opt,name=bootstrapServers,proto3" json:"bootstrapServers,omitempty"`
	SecurityProtocol string   `protobuf:"bytes,2,opt,name=securityProtocol,proto3" json:"securityProtocol,omitempty"` //plaintext, ssl, sasl_plaintext, sasl_ssl
	Sasl             *SASL    `protobuf:"bytes,3,opt,name=sasl,proto3" json:"sasl,omitempty"`
	Ssl              *SSL     `protobuf:"bytes,4,opt,name=ssl,proto3" json:"ssl,omitempty"`
	Group            string   `protobuf:"bytes,5,opt,name=group,proto3" json:"group,omitempty"`
	Topics           []string `protobuf:"bytes,6,rep,name=topics,proto3" json:"topics,omitempty"`
}

func (x *ConsumerConf) Reset() {
	*x = ConsumerConf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_confluent_conf_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsumerConf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumerConf) ProtoMessage() {}

func (x *ConsumerConf) ProtoReflect() protoreflect.Message {
	mi := &file_client_confluent_conf_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumerConf.ProtoReflect.Descriptor instead.
func (*ConsumerConf) Descriptor() ([]byte, []int) {
	return file_client_confluent_conf_proto_rawDescGZIP(), []int{2}
}

func (x *ConsumerConf) GetBootstrapServers() string {
	if x != nil {
		return x.BootstrapServers
	}
	return ""
}

func (x *ConsumerConf) GetSecurityProtocol() string {
	if x != nil {
		return x.SecurityProtocol
	}
	return ""
}

func (x *ConsumerConf) GetSasl() *SASL {
	if x != nil {
		return x.Sasl
	}
	return nil
}

func (x *ConsumerConf) GetSsl() *SSL {
	if x != nil {
		return x.Ssl
	}
	return nil
}

func (x *ConsumerConf) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *ConsumerConf) GetTopics() []string {
	if x != nil {
		return x.Topics
	}
	return nil
}

type ProducerConf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BootstrapServers    string `protobuf:"bytes,1,opt,name=bootstrapServers,proto3" json:"bootstrapServers,omitempty"`
	SecurityProtocol    string `protobuf:"bytes,2,opt,name=securityProtocol,proto3" json:"securityProtocol,omitempty"` //plaintext, ssl, sasl_plaintext, sasl_ssl
	Sasl                *SASL  `protobuf:"bytes,3,opt,name=sasl,proto3" json:"sasl,omitempty"`
	Ssl                 *SSL   `protobuf:"bytes,4,opt,name=ssl,proto3" json:"ssl,omitempty"`
	RequestRequiredAcks int32  `protobuf:"varint,5,opt,name=request_required_acks,json=requestRequiredAcks,proto3" json:"request_required_acks,omitempty"`
	Acks                int32  `protobuf:"varint,6,opt,name=acks,proto3" json:"acks,omitempty"`
	Partitioner         string `protobuf:"bytes,7,opt,name=partitioner,proto3" json:"partitioner,omitempty"`
	RequestTimeoutMs    int32  `protobuf:"varint,8,opt,name=request_timeout_ms,json=requestTimeoutMs,proto3" json:"request_timeout_ms,omitempty"`
	Topic               string `protobuf:"bytes,9,opt,name=topic,proto3" json:"topic,omitempty"`
}

func (x *ProducerConf) Reset() {
	*x = ProducerConf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_client_confluent_conf_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProducerConf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProducerConf) ProtoMessage() {}

func (x *ProducerConf) ProtoReflect() protoreflect.Message {
	mi := &file_client_confluent_conf_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProducerConf.ProtoReflect.Descriptor instead.
func (*ProducerConf) Descriptor() ([]byte, []int) {
	return file_client_confluent_conf_proto_rawDescGZIP(), []int{3}
}

func (x *ProducerConf) GetBootstrapServers() string {
	if x != nil {
		return x.BootstrapServers
	}
	return ""
}

func (x *ProducerConf) GetSecurityProtocol() string {
	if x != nil {
		return x.SecurityProtocol
	}
	return ""
}

func (x *ProducerConf) GetSasl() *SASL {
	if x != nil {
		return x.Sasl
	}
	return nil
}

func (x *ProducerConf) GetSsl() *SSL {
	if x != nil {
		return x.Ssl
	}
	return nil
}

func (x *ProducerConf) GetRequestRequiredAcks() int32 {
	if x != nil {
		return x.RequestRequiredAcks
	}
	return 0
}

func (x *ProducerConf) GetAcks() int32 {
	if x != nil {
		return x.Acks
	}
	return 0
}

func (x *ProducerConf) GetPartitioner() string {
	if x != nil {
		return x.Partitioner
	}
	return ""
}

func (x *ProducerConf) GetRequestTimeoutMs() int32 {
	if x != nil {
		return x.RequestTimeoutMs
	}
	return 0
}

func (x *ProducerConf) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

var File_client_confluent_conf_proto protoreflect.FileDescriptor

var file_client_confluent_conf_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x75, 0x65,
	0x6e, 0x74, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x74, 0x1a,
	0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x56, 0x0a, 0x04, 0x53, 0x41, 0x53, 0x4c, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x63, 0x68, 0x61,
	0x6e, 0x69, 0x73, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x63,
	0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x3b, 0x0a, 0x03, 0x53, 0x53, 0x4c, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x61, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x61, 0x50, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63,
	0x61, 0x50, 0x65, 0x6d, 0x22, 0xe9, 0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x2a, 0x0a, 0x10, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72,
	0x61, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x73, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x2a, 0x0a,
	0x04, 0x73, 0x61, 0x73, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x74, 0x2e, 0x53,
	0x41, 0x53, 0x4c, 0x52, 0x04, 0x73, 0x61, 0x73, 0x6c, 0x12, 0x27, 0x0a, 0x03, 0x73, 0x73, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x53, 0x4c, 0x52, 0x03, 0x73,
	0x73, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73,
	0x22, 0xe9, 0x02, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x66, 0x12, 0x2a, 0x0a, 0x10, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x6f, 0x6f,
	0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x2a, 0x0a,
	0x10, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x2a, 0x0a, 0x04, 0x73, 0x61, 0x73,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x41, 0x53, 0x4c, 0x52,
	0x04, 0x73, 0x61, 0x73, 0x6c, 0x12, 0x27, 0x0a, 0x03, 0x73, 0x73, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x6c, 0x75, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x53, 0x4c, 0x52, 0x03, 0x73, 0x73, 0x6c, 0x12, 0x32,
	0x0a, 0x15, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x5f, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x41, 0x63,
	0x6b, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x6d, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x4d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x42, 0x39, 0x5a, 0x37,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x2d, 0x62, 0x61,
	0x6d, 0x62, 0x6f, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x74, 0x3b, 0x63, 0x6f,
	0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_client_confluent_conf_proto_rawDescOnce sync.Once
	file_client_confluent_conf_proto_rawDescData = file_client_confluent_conf_proto_rawDesc
)

func file_client_confluent_conf_proto_rawDescGZIP() []byte {
	file_client_confluent_conf_proto_rawDescOnce.Do(func() {
		file_client_confluent_conf_proto_rawDescData = protoimpl.X.CompressGZIP(file_client_confluent_conf_proto_rawDescData)
	})
	return file_client_confluent_conf_proto_rawDescData
}

var file_client_confluent_conf_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_client_confluent_conf_proto_goTypes = []interface{}{
	(*SASL)(nil),         // 0: client.confluent.SASL
	(*SSL)(nil),          // 1: client.confluent.SSL
	(*ConsumerConf)(nil), // 2: client.confluent.ConsumerConf
	(*ProducerConf)(nil), // 3: client.confluent.ProducerConf
}
var file_client_confluent_conf_proto_depIdxs = []int32{
	0, // 0: client.confluent.ConsumerConf.sasl:type_name -> client.confluent.SASL
	1, // 1: client.confluent.ConsumerConf.ssl:type_name -> client.confluent.SSL
	0, // 2: client.confluent.ProducerConf.sasl:type_name -> client.confluent.SASL
	1, // 3: client.confluent.ProducerConf.ssl:type_name -> client.confluent.SSL
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_client_confluent_conf_proto_init() }
func file_client_confluent_conf_proto_init() {
	if File_client_confluent_conf_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_client_confluent_conf_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SASL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_confluent_conf_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_confluent_conf_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsumerConf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_client_confluent_conf_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProducerConf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_client_confluent_conf_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_client_confluent_conf_proto_goTypes,
		DependencyIndexes: file_client_confluent_conf_proto_depIdxs,
		MessageInfos:      file_client_confluent_conf_proto_msgTypes,
	}.Build()
	File_client_confluent_conf_proto = out.File
	file_client_confluent_conf_proto_rawDesc = nil
	file_client_confluent_conf_proto_goTypes = nil
	file_client_confluent_conf_proto_depIdxs = nil
}
